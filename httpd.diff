Index: modules/ssl/mod_ssl.c
===================================================================
--- modules/ssl/mod_ssl.c	(revision 1848607)
+++ modules/ssl/mod_ssl.c	(working copy)
@@ -589,6 +589,11 @@
     return ssl_engine_set(c, NULL, 0, 0);
 }
 
+static const char *const * ssl_hook_GetVars(void)
+{
+    return ssl_hook_GetVars_get();
+}
+
 int ssl_init_ssl_connection(conn_rec *c, request_rec *r)
 {
     SSLSrvConfigRec *sc;
@@ -766,6 +771,7 @@
     APR_REGISTER_OPTIONAL_FN(ssl_proxy_enable);
     APR_REGISTER_OPTIONAL_FN(ssl_engine_disable);
     APR_REGISTER_OPTIONAL_FN(ssl_engine_set);
+    APR_REGISTER_OPTIONAL_FN(ssl_hook_GetVars);
 
     ap_register_auth_provider(p, AUTHZ_PROVIDER_GROUP, "ssl",
                               AUTHZ_PROVIDER_VERSION,
Index: modules/ssl/mod_ssl.h
===================================================================
--- modules/ssl/mod_ssl.h	(revision 1848607)
+++ modules/ssl/mod_ssl.h	(working copy)
@@ -86,6 +86,10 @@
                         (apr_pool_t *p, conn_rec *c, const char *type,
                          unsigned char **buf, apr_size_t *size));
 
+/** A functions that returns the list of SSL environment variable
+ * provided by mod_ssl */ 
+APR_DECLARE_OPTIONAL_FN(const char * const*, ssl_hook_GetVars, (void));
+
 /** The ssl_proxy_enable() and ssl_engine_{set,disable}() optional
  * functions are used by mod_proxy to enable use of SSL for outgoing
  * connections. */
Index: modules/ssl/ssl_engine_kernel.c
===================================================================
--- modules/ssl/ssl_engine_kernel.c	(revision 1848607)
+++ modules/ssl/ssl_engine_kernel.c	(working copy)
@@ -2694,3 +2694,8 @@
 }
 
 #endif /* HAVE_SRP */
+
+const char *const * ssl_hook_GetVars_get(void)
+{
+   return ssl_hook_Fixup_vars;
+}
Index: modules/ssl/ssl_private.h
===================================================================
--- modules/ssl/ssl_private.h	(revision 1848607)
+++ modules/ssl/ssl_private.h	(working copy)
@@ -1112,6 +1112,8 @@
 int ssl_is_challenge(conn_rec *c, const char *servername, 
                      X509 **pcert, EVP_PKEY **pkey);
 
+const char *const * ssl_hook_GetVars_get(void);
+
 #endif /* SSL_PRIVATE_H */
 /** @} */
 
